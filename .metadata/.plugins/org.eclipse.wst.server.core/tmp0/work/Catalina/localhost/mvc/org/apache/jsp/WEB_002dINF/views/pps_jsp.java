/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.83
 * Generated at: 2022-12-10 11:57:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.multi.mvc.PurposeVO;
import com.multi.mvc.AccountVO;
import java.util.List;

public final class pps_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1669019151789L));
    _jspx_dependants.put("jar:file:/D:/study/algorithm_study/AccountBook/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Account_Book/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.multi.mvc.PurposeVO");
    _jspx_imports_classes.add("com.multi.mvc.AccountVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

List<AccountVO> list = (List<AccountVO>) request.getAttribute("acc"); //소비한 항목 리스트를 가져옴 
PurposeVO target = (PurposeVO) request.getAttribute("vo"); //목표치 항목 리스트를 가져옴
int thisMonth = (Integer) request.getAttribute("mm"); //사용자가 입력한 달

double allSum = 0; //현재 소비금액 총 합
double[] categoryNow = new double[5]; //각 카테고리별 현재 소비금액을 저장하는 배열 / [0] = food , [1] = trans, [2] = medi, [3] = leis, [4] = etc

double targetSum = 0; //목표치 총 합;
double[] categoryTarget = new double[5]; //각 카테고리별 소비목표를 저장하는 배열 / [0] = food , [1] = trans, [2] = medi, [3] = leis, [4] = etc

double totalPercent = 0;
String totalGrade = ""; //종합적인 수치 등급
String[] categoryGrade = new String[5]; //각 카테고리별 소비등급을 저장하는 배열/ [0] = food , [1] = trans, [2] = medi, [3] = leis, [4] = etc
String[] gradeColor = new String[5]; //전체 및 각 카테고리별 소비등급에 따라 컬러를 저장하는 배열 
int[] cgCount = new int[5]; //카테고리별 등급이 몇개인지 저장하는 배열 [0]=여유, [1]=안전, [2]=주의, [3]=경고, [4]=초과

System.out.println("from first screen : " + thisMonth); //사용자가 입력한 달을 콘솔에 출력

for (int i = 0; i < list.size(); i++) { //account table에서 받아온 값을 각 항목별로 합해 categoryNow에 저장, 달이 사용자가 입력한 값과 일치해야만 처리(다른 달의 기록이 더해지는 것을 방지)
	int tablemonth = Integer.parseInt(list.get(i).getPaydate().substring(5, 7));
	if (tablemonth == thisMonth) {
		if (list.get(i).getCategory().equals("food")) {
	categoryNow[0] = categoryNow[0] + list.get(i).getAmount();
		} else if (list.get(i).getCategory().equals("trans")) {
	categoryNow[1] = categoryNow[1] + list.get(i).getAmount();
		} else if (list.get(i).getCategory().equals("medi")) {
	categoryNow[2] = categoryNow[2] + list.get(i).getAmount();
		} else if (list.get(i).getCategory().equals("leis")) {
	categoryNow[3] = categoryNow[3] + list.get(i).getAmount();
		} else if (list.get(i).getCategory().equals("etc")) {
	categoryNow[4] = categoryNow[4] + list.get(i).getAmount();
		}
	} else {

	}
}

categoryTarget[0] = target.getFood(); //각 목표치 항목들을 변수에 저장 
categoryTarget[1] = target.getTrans();
categoryTarget[2] = target.getMedi();
categoryTarget[3] = target.getLeis();
categoryTarget[4] = target.getEtc();

allSum = categoryNow[0] + categoryNow[1] + categoryNow[2] + categoryNow[3] + categoryNow[4]; //소비항목 전체 합 
for (int i = 0; i < categoryTarget.length; i++) { //소비 목표치 전체 합
	targetSum = targetSum + categoryTarget[i];
}

totalPercent = Math.round((allSum / targetSum * 100) * 100) / 100.0;
if (totalPercent > 0 && totalPercent <= 40) {
	totalGrade = "여유";
} else if (totalPercent > 40 && totalPercent <= 70) {
	totalGrade = "안전";
} else if (totalPercent > 70 && totalPercent <= 90) {
	totalGrade = "주의";
} else if (totalPercent > 90 && totalPercent <= 100) {
	totalGrade = "경고";
} else {
	totalGrade = "초과";
}

int[] use = new int[5]; //카테고리별 사용율 저장 배열 
for (int i = 0; i < categoryNow.length; i++) { //카테고리별 사용율을 저장
	use[i] = (int) (categoryNow[i] / categoryTarget[i] * 100);
}

for (int i = 0; i < categoryGrade.length; i++) {
	if (use[i] >= 0 && use[i] <= 40) {
		categoryGrade[i] = "여유";
		cgCount[0]++;
	} else if (use[i] > 40 && use[i] <= 70) {
		categoryGrade[i] = "안전";
		cgCount[1]++;
	} else if (use[i] > 70 && use[i] <= 90) {
		categoryGrade[i] = "주의";
		cgCount[2]++;
	} else if (use[i] > 90 && use[i] <= 100) {
		categoryGrade[i] = "경고";
		cgCount[3]++;
	} else {
		categoryGrade[i] = "초과";
		cgCount[4]++;
	}
}

String totalgradeColor = "";

if (totalGrade.equals("여유")) {
	totalgradeColor = "blue";
} else if (totalGrade.equals("안전")) {
	totalgradeColor = "green";
} else if (totalGrade.equals("주의")) {
	totalgradeColor = "yellow";
} else if (totalGrade.equals("경고")) {
	totalgradeColor = "orange";
} else {
	totalgradeColor = "red";
}

for (int i = 0; i < 5; i++) {
	if (categoryGrade[i].equals("여유")) {
		gradeColor[i] = "blue";
	} else if (categoryGrade[i].equals("안전")) {
		gradeColor[i] = "green";
	} else if (categoryGrade[i].equals("주의")) {
		gradeColor[i] = "yellow";
	} else if (categoryGrade[i].equals("경고")) {
		gradeColor[i] = "orange";
	} else {
		gradeColor[i] = "red";
	}

}

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<script src=\"//code.jquery.com/jquery-3.3.1.min.js\"></script>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/out.css\">\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\">\n");
      out.write("<link rel='stylesheet'\n");
      out.write("	href='https://cdn-uicons.flaticon.com/uicons-regular-rounded/css/uicons-regular-rounded.css'>\n");
      out.write("<link rel='stylesheet'\n");
      out.write("	href='https://cdn-uicons.flaticon.com/uicons-regular-straight/css/uicons-regular-straight.css'>\n");
      out.write("<script\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\"\n");
      out.write("	src=\"https://www.gstatic.com/charts/loader.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("	google.charts.load('current', {\n");
      out.write("		'packages' : [ 'gauge' ]\n");
      out.write("	});\n");
      out.write("	google.charts.setOnLoadCallback(drawChart);\n");
      out.write("\n");
      out.write("	function drawChart() {\n");
      out.write("\n");
      out.write("		var data = google.visualization.arrayToDataTable([\n");
      out.write("				[ 'Label', 'Value' ], [ '식비',\n");
      out.print(use[0]);
      out.write("\n");
      out.write("	],\n");
      out.write("				[ '교통',\n");
      out.print(use[1]);
      out.write("\n");
      out.write("	], [ '의료',\n");
      out.print(use[2]);
      out.write("\n");
      out.write("	],\n");
      out.write("				[ '취미',\n");
      out.print(use[3]);
      out.write("\n");
      out.write("	], [ '기타',\n");
      out.print(use[4]);
      out.write("\n");
      out.write("	] ]);\n");
      out.write("\n");
      out.write("		var options = {\n");
      out.write("			width : 1000,\n");
      out.write("			height : 200,\n");
      out.write("			redFrom : 90,\n");
      out.write("			redTo : 100,\n");
      out.write("			yellowFrom : 70,\n");
      out.write("			yellowTo : 90,\n");
      out.write("			greenFrom : 40,\n");
      out.write("			greenTo : 70,\n");
      out.write("			minorTicks : 5\n");
      out.write("		};\n");
      out.write("\n");
      out.write("		var chart = new google.visualization.Gauge(document\n");
      out.write("				.getElementById('chart_div'));\n");
      out.write("\n");
      out.write("		chart.draw(data, options);\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	$(function() {\n");
      out.write("		$(\".tab-content\").eq(0).show(0); // 첫번째 tab 보여줌\n");
      out.write("		$(\".tab-ul li\").click(function() { // li 클릭하면\n");
      out.write("			var idx = $(this).index(); // tab-ul li 중 클릭한 것이 몇 번째인지 확인\n");
      out.write("			$(\".tab-content\").hide(); // tab-content 숨김\n");
      out.write("			$(\".tab-content\").eq(idx).show(); // 클릭한 것에 해당하는 tab-content 보여줌\n");
      out.write("			$(\".tab-ul li\").removeClass(\"active\"); // active 클래스 지워줌\n");
      out.write("			$(this).addClass(\"active\"); // 클릭한 것에 active 클래스 추가\n");
      out.write("			if (idx == 0) { // 누른 버튼이 수입/지출 관리이면 \n");
      out.write("				location.href = \"account.jsp\";\n");
      out.write("			} else if (idx == 1) { // 누른 버튼이 캘린더이면\n");
      out.write("				location.href = \"\"; // 캘린더 페이지 호출할 Controller 주소 입력!\n");
      out.write("			} else if (idx == 2) { // 누른 버튼이 통계이면\n");
      out.write("				location.href = \"\"; // 통계 페이지 호출할 Controller 주소 입력!\n");
      out.write("			} else { // 누른 버튼이 목표지출이면\n");
      out.write("				location.href = \"intro.jsp\"; // 목표지출 페이지 호출할 Controller 주소 입력!\n");
      out.write("			}\n");
      out.write("		});\n");
      out.write("	});\n");
      out.write("</script>\n");
      out.write("<style type=\"text/css\">\n");
      out.write(".tBtn {\n");
      out.write("	border-radius: 20px;\n");
      out.write("	border: 0;\n");
      out.write("	background: green;\n");
      out.write("	color: white;\n");
      out.write("	width: 140px;\n");
      out.write("	height: 40px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".circle1 {\n");
      out.write("	background-color: black;\n");
      out.write("	width: 38px;\n");
      out.write("	height: 38px;\n");
      out.write("	border-radius: 75px;\n");
      out.write("	text-align: center;\n");
      out.write("	margin: 0 auto;\n");
      out.write("	font-size: 12px;\n");
      out.write("	vertical-align: middle;\n");
      out.write("	line-height: 150px;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("	<div class=\"total\">\n");
      out.write("		<!-- 메뉴 -->\n");
      out.write("		<div class=\"menu\">\n");
      out.write("			<h2 style=\"margin-left: 30px; margin-top: 20px;\">\n");
      out.write("				<i class=\"fi fi-rr-money-check-edit\"></i>가계부\n");
      out.write("			</h2>\n");
      out.write("			<ul class=\"tab-ul\">\n");
      out.write("				<li><a id=\"tab1\"><i class=\"fi fi-rr-add\"></i>수입/지출\n");
      out.write("						관리</a></li>\n");
      out.write("				<li><a id=\"tab2\"><i class=\"fi fi-rs-calendar-check\"></i>캘린더</a>\n");
      out.write("				</li>\n");
      out.write("				<li><a id=\"tab3\"><i class=\"fi fi-rs-chart-histogram\"></i>통계</a>\n");
      out.write("				</li>\n");
      out.write("				<li  class=\"active\"><a id=\"tab4\"><i class=\"fi fi-rr-coins\"></i>목표 지출</a></li>\n");
      out.write("			</ul>\n");
      out.write("		</div>\n");
      out.write("		<!-- 내용 -->\n");
      out.write("		<div class=\"content\">\n");
      out.write("			<div class=\"tab-content\">\n");
      out.write("				<!-- 수입/지출 관리 페이지 -->\n");
      out.write("				<h4 style=\"margin-left: 30px; margin-top: 20px;\">\n");
      out.write("					<i class=\"fi fi-rr-coins\"></i>목표 지출\n");
      out.write("				</h4>\n");
      out.write("				<hr style=\"width: 100%;\">\n");
      out.write("				<br>\n");
      out.write("\n");
      out.write("				<table style=\"width: 300%\">\n");
      out.write("					<tr>\n");
      out.write("						<td width=\"150px\" style=\"text-align: center;\">\n");
      out.write("							<button type=\"button\" class=\"tBtn\"\n");
      out.write("								style=\"background-color: green\"\n");
      out.write("								onClick=\"location.href='purposeEdit.jsp?food=");
      out.print(target.getFood());
      out.write(" &trans=");
      out.print(target.getTrans());
      out.write(" &medi=");
      out.print(target.getMedi());
      out.write(" &leis=");
      out.print(target.getLeis());
      out.write(" &etc=");
      out.print(target.getEtc());
      out.write(" &month=");
      out.print(thisMonth);
      out.write("'\">수정하기</button>\n");
      out.write("						</td>\n");
      out.write("						<td style=\"text-align: center;\"><a\n");
      out.write("							style=\"text-align: center; font-size: 50px; font-weight: bold;\"\n");
      out.write("							id=\"title\">");
      out.print(thisMonth);
      out.write("월 목표치</a></td>\n");
      out.write("						<td width=\"150px\" style=\"text-align: center;\">\n");
      out.write("							<button type=\"button\" class=\"tBtn\"\n");
      out.write("								style=\"background-color: green\"\n");
      out.write("								onClick=\"location.href='intro.jsp'\">첫페이지로</button>\n");
      out.write("						</td>\n");
      out.write("					</tr>\n");
      out.write("				</table>\n");
      out.write("				<table width=\"300%\" style=\"font-size: 30px\">\n");
      out.write("					<tr>\n");
      out.write("						<td align=\"center\">\n");
      out.write("							<table id=\"useAll\">\n");
      out.write("								<tr>\n");
      out.write("									<td>전체 소비금액</td>\n");
      out.write("									<td>:</td>\n");
      out.write("									<td>");
      out.print((int) allSum);
      out.write('/');
      out.print((int) targetSum);
      out.write("원</td>\n");
      out.write("									<td></td>\n");
      out.write("								</tr>\n");
      out.write("							</table>\n");
      out.write("						</td>\n");
      out.write("						<td align=\"center\">\n");
      out.write("							<table id=\"useAllGrade\">\n");
      out.write("								<tr>\n");
      out.write("									<td>현재 고객님의 총 소비 상태는</td>\n");
      out.write("									<td><div class=\"circle1\"\n");
      out.write("											style=\"background-color: ");
      out.print(totalgradeColor);
      out.write("\"></div></td>\n");
      out.write("									<td><strong>");
      out.print(totalGrade);
      out.write("</strong></td>\n");
      out.write("									<td>입니다</td>\n");
      out.write("								</tr>\n");
      out.write("							</table>\n");
      out.write("						</td>\n");
      out.write("					</tr>\n");
      out.write("				</table>\n");
      out.write("				<table width=\"300%\">\n");
      out.write("					<tr>\n");
      out.write("						<td align=\"center\">\n");
      out.write("							<div id=\"chart_div\" style=\"width: 1000px; height: 200px;\"></div>\n");
      out.write("						</td>\n");
      out.write("					</tr>\n");
      out.write("				</table>\n");
      out.write("\n");
      out.write("				<table width=\"300%\">\n");
      out.write("					<tr>\n");
      out.write("						<td align=\"center\">\n");
      out.write("							<table>\n");
      out.write("								<tr style=\"font-size: 40px;\">\n");
      out.write("									<td><div class=\"circle1\" style=\"background-color: blue\"></div></td>\n");
      out.write("									<td>여유</td>\n");
      out.write("									<td>");
      out.print(cgCount[0]);
      out.write("</td>\n");
      out.write("									<td width=\"10px\"></td>\n");
      out.write("									<td><div class=\"circle1\" style=\"background-color: green\"></div></td>\n");
      out.write("									<td>안전</td>\n");
      out.write("									<td>");
      out.print(cgCount[1]);
      out.write("</td>\n");
      out.write("									<td width=\"10px\"></td>\n");
      out.write("									<td><div class=\"circle1\" style=\"background-color: yellow\"></div></td>\n");
      out.write("									<td>주의</td>\n");
      out.write("									<td>");
      out.print(cgCount[2]);
      out.write("</td>\n");
      out.write("									<td width=\"10px\"></td>\n");
      out.write("									<td><div class=\"circle1\" style=\"background-color: orange\"></div></td>\n");
      out.write("									<td>경고</td>\n");
      out.write("									<td>");
      out.print(cgCount[3]);
      out.write("</td>\n");
      out.write("									<td width=\"10px\"></td>\n");
      out.write("									<td><div class=\"circle1\" style=\"background-color: red\"></div></td>\n");
      out.write("									<td>초과</td>\n");
      out.write("									<td>");
      out.print(cgCount[4]);
      out.write("</td>\n");
      out.write("								</tr>\n");
      out.write("							</table>\n");
      out.write("						</td>\n");
      out.write("					</tr>\n");
      out.write("\n");
      out.write("\n");
      out.write("				</table>\n");
      out.write("				<table width=\"300%\">\n");
      out.write("					<tr>\n");
      out.write("						<td style=\"font-size: 40px;\" align=\"center\">\n");
      out.write("							<table style=\"text-align: center\">\n");
      out.write("								<tr>\n");
      out.write("									<td colspan=\"6\">사용현황</td>\n");
      out.write("								</tr>\n");
      out.write("								<tr>\n");
      out.write("									<td width=\"200px\"></td>\n");
      out.write("									<td width=\"400px\">현재 사용량</td>\n");
      out.write("									<td width=\"400px\">목표 금액</td>\n");
      out.write("									<td width=\"200px\">사용율</td>\n");
      out.write("									<td colspan=\"2\">단계</td>\n");
      out.write("								</tr>\n");
      out.write("								<tr>\n");
      out.write("									<td>식비</td>\n");
      out.write("									<td style=\"text-align: right; width: 200px\">");
      out.print((int) categoryNow[0]);
      out.write("원</td>\n");
      out.write("									<td style=\"text-align: right; width: 200px\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.food}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("원</td>\n");
      out.write("									<td>");
      out.print(use[0]);
      out.write("%</td>\n");
      out.write("									<td><div class=\"circle1\"\n");
      out.write("											style=\"background-color: ");
      out.print(gradeColor[0]);
      out.write("\"></div></td>\n");
      out.write("									<td>");
      out.print(categoryGrade[0]);
      out.write("</td>\n");
      out.write("								</tr>\n");
      out.write("								<tr>\n");
      out.write("									<td>교통비</td>\n");
      out.write("									<td style=\"text-align: right\">");
      out.print((int) categoryNow[1]);
      out.write("원</td>\n");
      out.write("									<td style=\"text-align: right\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.trans}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("원</td>\n");
      out.write("									<td>");
      out.print(use[1]);
      out.write("%</td>\n");
      out.write("									<td><div class=\"circle1\"\n");
      out.write("											style=\"background-color: ");
      out.print(gradeColor[1]);
      out.write("\"></div></td>\n");
      out.write("									<td>");
      out.print(categoryGrade[1]);
      out.write("</td>\n");
      out.write("								</tr>\n");
      out.write("								<tr>\n");
      out.write("									<td>의료비</td>\n");
      out.write("									<td style=\"text-align: right\">");
      out.print((int) categoryNow[2]);
      out.write("원</td>\n");
      out.write("									<td style=\"text-align: right\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.medi}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("원</td>\n");
      out.write("									<td>");
      out.print(use[2]);
      out.write("%</td>\n");
      out.write("									<td><div class=\"circle1\"\n");
      out.write("											style=\"background-color: ");
      out.print(gradeColor[2]);
      out.write("\"></div></td>\n");
      out.write("									<td>");
      out.print(categoryGrade[2]);
      out.write("</td>\n");
      out.write("								</tr>\n");
      out.write("								<tr>\n");
      out.write("									<td>여가비</td>\n");
      out.write("									<td style=\"text-align: right\">");
      out.print((int) categoryNow[3]);
      out.write("원</td>\n");
      out.write("									<td style=\"text-align: right\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.leis}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("원</td>\n");
      out.write("									<td>");
      out.print(use[3]);
      out.write("%</td>\n");
      out.write("									<td><div class=\"circle1\"\n");
      out.write("											style=\"background-color: ");
      out.print(gradeColor[3]);
      out.write("\"></div></td>\n");
      out.write("									<td>");
      out.print(categoryGrade[3]);
      out.write("</td>\n");
      out.write("								</tr>\n");
      out.write("								<tr>\n");
      out.write("									<td>기타</td>\n");
      out.write("									<td style=\"text-align: right\">");
      out.print((int) categoryNow[4]);
      out.write("원</td>\n");
      out.write("									<td style=\"text-align: right\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.etc}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("원</td>\n");
      out.write("									<td>");
      out.print(use[4]);
      out.write("%</td>\n");
      out.write("									<td><div class=\"circle1\"\n");
      out.write("											style=\"background-color: ");
      out.print(gradeColor[4]);
      out.write("\"></div></td>\n");
      out.write("									<td>");
      out.print(categoryGrade[4]);
      out.write("</td>\n");
      out.write("								</tr>\n");
      out.write("							</table>\n");
      out.write("						</td>\n");
      out.write("\n");
      out.write("					</tr>\n");
      out.write("\n");
      out.write("\n");
      out.write("				</table>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
