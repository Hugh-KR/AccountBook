/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.83
 * Generated at: 2022-12-10 12:18:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.multi.mvc.AccountVO;
import java.util.List;

public final class all_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/study/algorithm_study/AccountBook/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Account_Book/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1669019151789L));
    _jspx_dependants.put("jar:file:/D:/study/algorithm_study/AccountBook/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Account_Book/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.multi.mvc.AccountVO");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write(" <!-- 숫자 세 자리 단위로 콤마 찍기 라이브러리 -->\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/out.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\">\n");
      out.write("<link rel='stylesheet' href='https://cdn-uicons.flaticon.com/uicons-regular-rounded/css/uicons-regular-rounded.css'>\n");
      out.write("<link rel='stylesheet' href='https://cdn-uicons.flaticon.com/uicons-regular-straight/css/uicons-regular-straight.css'>\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js\"></script>\n");
      out.write("<script>\n");
      out.write("	/* 메뉴 클릭 시 이벤트 -> 해당 메뉴에 대한 content 출력 */\n");
      out.write("	$(function() {\n");
      out.write("		$(\".tab-content\").eq(0).show(0); // 첫번째 tab 보여줌\n");
      out.write("		$(\".tab-ul li\").click(function() { // li 클릭하면\n");
      out.write("			var idx = $(this).index(); // tab-ul li 중 클릭한 것이 몇 번째인지 확인\n");
      out.write("			$(\".tab-content\").hide(); // tab-content 숨김\n");
      out.write("			$(\".tab-content\").eq(idx).show(); // 클릭한 것에 해당하는 tab-content 보여줌\n");
      out.write("			$(\".tab-ul li\").removeClass(\"active\"); // active 클래스 지워줌\n");
      out.write("			$(this).addClass(\"active\"); // 클릭한 것에 active 클래스 추가\n");
      out.write("			if(idx == 0){  // 누른 버튼이 수입/지출 관리이면 \n");
      out.write("				location.href=\"all.multi\";\n");
      out.write("			} else if(idx == 1){  // 누른 버튼이 캘린더이면\n");
      out.write("				location.href=\"calendar.jsp\"; // 캘린더 페이지 호출할 Controller 주소 입력!\n");
      out.write("			} else if(idx == 2){ // 누른 버튼이 통계이면\n");
      out.write("				location.href=\"\"; // 통계 페이지 호출할 Controller 주소 입력!\n");
      out.write("			} else{ // 누른 버튼이 목표지출이면\n");
      out.write("				location.href=\"intro.jsp\";  // 목표지출 페이지 호출할 Controller 주소 입력!\n");
      out.write("			}\n");
      out.write("		});\n");
      out.write("	});\n");
      out.write("	/* 수입/지출 클릭 시 이벤트 */\n");
      out.write("	$(function() {\n");
      out.write("		$(\".tab-content2\").eq(0).show(0); // 첫번째 tab 보여줌\n");
      out.write("		$(\".tab-ul2 li\").click(function() { // li 클릭하면\n");
      out.write("			var idx = $(this).index(); // tab-ul2 li 중 클릭한 것이 몇 번째인지 확인\n");
      out.write("			$(\".tab-content2\").hide(); // tab-content2 숨김\n");
      out.write("			$(\".tab-content2\").eq(idx).show(); // 클릭한 것에 해당하는 tab-content2 보여줌\n");
      out.write("			$(\".tab-ul2 li\").removeClass(\"active2\"); // active2 클래스 지워줌\n");
      out.write("			$(this).addClass(\"active2\"); // 클릭한 것에 active2 클래스 추가\n");
      out.write("			if(idx == 0){  // 누른 버튼이 전체이면 all.multi\n");
      out.write("				location.href=\"all.multi\";\n");
      out.write("			} else if(idx == 1){  // 누른 버튼이 전체이면 all_expense.multi \n");
      out.write("				location.href=\"all_income.multi\";\n");
      out.write("			} else { // 누른 버튼이 지출이면 all_income.multi\n");
      out.write("				location.href=\"all_expense.multi\";\n");
      out.write("			}\n");
      out.write("		});\n");
      out.write("	});\n");
      out.write("	/* 테이블 행 클릭 시 이벤트 -> 오른쪽 테이블에 클릭한 행 값들 삽입 */\n");
      out.write("	$(function () {\n");
      out.write("		$('#tableList tr').click(function() {  // 테이블 행 클릭 시\n");
      out.write("			var idVal = $(this).find(\"td:eq(0)\").text();  // 클릭한 행의 id 값 idVal에 저장\n");
      out.write("			var paydateVal = $(this).find(\"td:eq(1)\").text();  // 클릭한 행의 날짜 값 paydateVal에 저장\n");
      out.write("			var payselectVal = $(this).find(\"td:eq(2)\").text();\n");
      out.write("			var categoryVal = $(this).find(\"td:eq(3)\").text();\n");
      out.write("			var memoVal = $(this).find(\"td:eq(4)\").text();\n");
      out.write("			var amountVal = $(this).find(\"td:eq(5)\").text();\n");
      out.write("			//alert(idVal + \" \" + paydateVal + \" \" + payselectVal + \" \" + categoryVal + \" \" + memoVal + \" \" + amountVal);\n");
      out.write("\n");
      out.write("			var amount = amountVal.replaceAll(\",\", \"\");  // amountVal 값 콤마 없애기\n");
      out.write("			\n");
      out.write("			$('#id').attr('value', idVal);\n");
      out.write("			$('#paydate').attr('value', paydateVal);  // 날짜 input value에 paydateVal 값 넣기\n");
      out.write("			if(payselectVal == \"수입\"){  // payselectVal에 따라 선택되는 값 변경\n");
      out.write("				$('#payselect1').prop(\"checked\", true);  // 수입이면 수입 체크\n");
      out.write("			} else{\n");
      out.write("				$('#payselect2').prop(\"checked\", true);  // 지출이면 지출 체크\n");
      out.write("			}\n");
      out.write("			if(categoryVal == \"food\" ){  // categoryVal에 따라 선택되는 카테고리 변경\n");
      out.write("				$('#category').val('food').prop(\"selected\",true);\n");
      out.write("			} else if(categoryVal == \"trans\"){\n");
      out.write("				$('#category').val('trans').prop(\"selected\",true);\n");
      out.write("			} else if(categoryVal == \"medi\"){\n");
      out.write("				$('#category').val('medi').prop(\"selected\",true);\n");
      out.write("			} else if(categoryVal == \"leis\"){\n");
      out.write("				$('#category').val('leis').prop(\"selected\",true);\n");
      out.write("			} else if(categoryVal == \"etc\"){\n");
      out.write("				$('#category').val('etc').prop(\"selected\",true);\n");
      out.write("			} else{\n");
      out.write("				$(\"#category option:eq(0)\").prop(\"selected\",true);  // 제일 처음 옵션 selected(빈 값)\n");
      out.write("			}\n");
      out.write("			$('#memo').attr('value', memoVal);  // 내용 input value에 memoVal 값 넣기\n");
      out.write("			$('#amount').attr('value', amount);  // 금액 input value에 amountVal 값 넣기\n");
      out.write("			\n");
      out.write("			$('#idDel').attr('value', idVal);  // delete 버튼이 있는 form input에 삭제할 id setting\n");
      out.write("			\n");
      out.write("			/* var data = {\n");
      out.write("					paydate : $(this).find(\"td:eq(0)\").text(),\n");
      out.write("					payselect : $(this).find(\"td:eq(1)\").text(),\n");
      out.write("					category : $(this).find(\"td:eq(2)\").text(),\n");
      out.write("					memo : $(this).find(\"td:eq(3)\").text(),\n");
      out.write("					amount : $(this).find(\"td:eq(4)\").text() \n");
      out.write("			}; */\n");
      out.write("			//$('#d1').html(paydateVal);\n");
      out.write("			//$('#d1').html('<form action=\"\" style=\"margin-right: 30px;\"><table style=\"width: 500px;\"><tr><td colspan=\"2\"><input type=\"text\" class=\"form-control no-line\" style=\"height: 50px; font-size: 30px; font-weight: bold;\" name=\"paydate\" id=\"paydate\" value=\"' + paydateVal + '\"></td></tr></table><table style=\"width: 500px;\"><tr><td style=\"width: 100px;\">분류</td><td><input type=\"text\" class=\"form-control no-line\" style=\"height: 50px;\" name=\"payselect\" id=\"payselect\" value=\"' + payselectVal + '\"></td></tr></table><table style=\"width: 500px;\"><tr><td style=\"width: 100px;\">카테고리</td><td><input type=\"text\" class=\"form-control no-line\" style=\"height: 50px;\" name=\"category\" id=\"category\" value=\"' + categoryVal + '\"></td></tr></table><table style=\"width: 500px;\"><tr><td style=\"width: 100px;\">금액</td><td><input type=\"text\" class=\"form-control no-line\" style=\"height: 50px;\" name=\"amount\" id=\"amount\" value=\"' + amountVal + '\"></td></tr></table><table style=\"width: 500px;\"><tr><td style=\"width: 100px;\">내용</td><td><input type=\"text\" class=\"form-control no-line\" style=\"height: 50px;\" name=\"memo\" id=\"memo\" value=\"' + memoVal + '\"></td></tr></table><br><br><a href=\"view_account.multi\"><button class=\"btn-green\" id=\"update\" style=\"float: left; margin-right: 10px;\">수정</button></a><a><button class=\"btn-green\" style=\"float: left; margin-right: 45px; width: 240px;\">삭제</button></a></form>');\n");
      out.write("		})\n");
      out.write("		\n");
      out.write("	})\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<div class=\"total\">\n");
      out.write("		<!-- 메뉴 -->\n");
      out.write("		<div class=\"menu\">\n");
      out.write("			<h2 style=\"margin-left: 30px; margin-top: 20px;\">\n");
      out.write("				<i class=\"fi fi-rr-money-check-edit\"></i>가계부\n");
      out.write("			</h2>\n");
      out.write("			<ul class=\"tab-ul\">\n");
      out.write("				<li class=\"active\"><a id=\"tab1\"><i class=\"fi fi-rr-add\"></i>수입/지출 관리</a></li>\n");
      out.write("				<li><a id=\"tab2\"><i class=\"fi fi-rs-calendar-check\"></i>캘린더</a></li>\n");
      out.write("				<li><a id=\"tab3\"><i class=\"fi fi-rs-chart-histogram\"></i>통계</a></li>\n");
      out.write("				<li><a id=\"tab4\"><i class=\"fi fi-rr-coins\"></i>목표 지출</a></li>\n");
      out.write("			</ul>\n");
      out.write("		</div>\n");
      out.write("		<!-- 내용 -->\n");
      out.write("		<div class=\"content\">\n");
      out.write("			<div class=\"tab-content\">\n");
      out.write("				<!-- 수입/지출 관리 페이지 -->\n");
      out.write("				<h4 style=\"margin-left: 30px; margin-top: 20px;\">\n");
      out.write("					<i class=\"fi fi-rr-add\"></i>수입/지출 관리\n");
      out.write("				</h4>\n");
      out.write("				<hr style=\"width: 1700px;\">\n");
      out.write("				<br>\n");
      out.write("					<div class=\"row\" style=\"width: 1700px;\">\n");
      out.write("					<!-- 왼쪽 div (수입/지출 select) -->\n");
      out.write("					<div class=\"col-md-6\">\n");
      out.write("						<ul class=\"tab-ul2\">\n");
      out.write("							<li style=\"float: left; margin-right: 0; width: 150px; text-align: center;\" class=\"active2\"><a>전체</a></li>\n");
      out.write("							<li style=\"float: left; margin-right: 0; width: 150px; text-align: center;\"><a>수입</a></li>\n");
      out.write("							<li style=\"float: left; margin-right: 0; width: 150px; text-align: center;\"><a>지출</a></li>\n");
      out.write("						</ul>\n");
      out.write("						<div class=\"content\" style=\"width: 600px; height: 750px;\">\n");
      out.write("							<div class=\"tab-content2\">\n");
      out.write("							<!-- 수입 리스트 -->\n");
      out.write("								<br>\n");
      out.write("								<h4>총액</h4>\n");
      out.write("								");

								List<AccountVO> list = (List<AccountVO>)request.getAttribute("list");  // 받아온 모델 list에 저장
								
								int total = 0;  // total 값 계산할 변수 초기화
								for(int i=0; i<list.size(); i++){  // list 크기만큼 반복 (list의 모든 값 더하기)
									if(list.get(i).getPayselect().equals("지출")){  // payselect가 지출이면
										total = total + (list.get(i).getAmount() * -1);  // -1을 곱해서 음수로 만들어준 뒤 total 값에 더해줌
									} else{  // 수입이면
										total = total + list.get(i).getAmount();  // total 값에 더해줌
									}
								}
								
      out.write("\n");
      out.write("								<h1>");
      //  fmt:formatNumber
      org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag _jspx_th_fmt_005fformatNumber_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag) _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag.class);
      boolean _jspx_th_fmt_005fformatNumber_005f0_reused = false;
      try {
        _jspx_th_fmt_005fformatNumber_005f0.setPageContext(_jspx_page_context);
        _jspx_th_fmt_005fformatNumber_005f0.setParent(null);
        // /WEB-INF/views/all.jsp(155,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_fmt_005fformatNumber_005f0.setValue( total );
        // /WEB-INF/views/all.jsp(155,12) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_fmt_005fformatNumber_005f0.setPattern("#,###");
        int _jspx_eval_fmt_005fformatNumber_005f0 = _jspx_th_fmt_005fformatNumber_005f0.doStartTag();
        if (_jspx_th_fmt_005fformatNumber_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatNumber_005f0);
        _jspx_th_fmt_005fformatNumber_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatNumber_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatNumber_005f0_reused);
      }
      out.write("</h1>  <!-- 숫자 세 자리 단위로 콤마 찍기 -->\n");
      out.write("								<br>\n");
      out.write("								<table>\n");
      out.write("									<tr>\n");
      out.write("										<td><input type=\"text\" class=\"form-control\" placeholder=\"YYYY-MM\" id=\"monthVal\"></td>\n");
      out.write("										<td><button class=\"btn-green\" style=\"width: 80px; height: 38px;\" id=\"chooseMonth\">선택</button></td>\n");
      out.write("									</tr>\n");
      out.write("								</table> <br>\n");
      out.write("								<div style=\"height: 600px; overflow: auto;\">\n");
      out.write("								<table class=\"table table-hover\" id=tableList>\n");
      out.write("									<thead>\n");
      out.write("										<tr>\n");
      out.write("											<!-- id는 행 구분하려고 만들었으므로 안보이게 하기 -->\n");
      out.write("											<th style=\"display: none;\">No</th>\n");
      out.write("											<th>날짜</th>\n");
      out.write("											<th>분류</th>\n");
      out.write("											<th>카테고리</th>\n");
      out.write("											<th>내용</th>\n");
      out.write("											<th>금액</th>\n");
      out.write("										</tr>\n");
      out.write("									</thead>\n");
      out.write("									<tbody>\n");
      out.write("										");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("									</tbody>\n");
      out.write("								</table>\n");
      out.write("								</div>\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("						<br>\n");
      out.write("					</div>\n");
      out.write("					<!-- 오른쪽 div (수입/지출 등록) -->\n");
      out.write("					<div class=\"col-md-6\">\n");
      out.write("						<h4 style=\"margin-left: 30px; font-weight: bold;\">수입 / 지출 추가</h4>\n");
      out.write("						<form action=\"insert_account.multi\" style=\"margin-left: 30px;\">\n");
      out.write("							<table style=\"width: 500px;\">\n");
      out.write("								<tr>\n");
      out.write("									<td style=\"width: 100px;\">날짜</td>\n");
      out.write("									<td><input type=\"date\" class=\"form-control no-line\" name=\"paydate\"\n");
      out.write("										style=\"height: 50px;\"></td>\n");
      out.write("								</tr>\n");
      out.write("							</table>\n");
      out.write("							<br>\n");
      out.write("							<table style=\"width: 500px;\">\n");
      out.write("								<tr>\n");
      out.write("									<td style=\"width: 100px;\">분류</td>\n");
      out.write("									<td>\n");
      out.write("									<td><label class=\"radio-inline\"\n");
      out.write("										style=\"margin-right: 100px;\"> <input type=\"radio\"\n");
      out.write("											name=\"payselect\" id=\"radio1\" value=\"수입\" checked> 수입\n");
      out.write("									</label> <label class=\"radio-inline\"> <input type=\"radio\"\n");
      out.write("											name=\"payselect\" id=\"radio2\" value=\"지출\"> 지출\n");
      out.write("									</label></td>\n");
      out.write("								</tr>\n");
      out.write("							</table>\n");
      out.write("							<br>\n");
      out.write("							<table style=\"width: 500px;\">\n");
      out.write("								<tr>\n");
      out.write("									<td style=\"width: 100px;\">카테고리</td>\n");
      out.write("									<td><select name=\"category\" class=\"custom-select no-line\">\n");
      out.write("											<option selected></option>\n");
      out.write("											<option value=\"food\">식비</option>\n");
      out.write("											<option value=\"trans\">교통비</option>\n");
      out.write("											<option value=\"medi\">의료비</option>\n");
      out.write("											<option value=\"leis\">여가</option>\n");
      out.write("											<option value=\"etc\">기타</option>\n");
      out.write("									</select></td>\n");
      out.write("								</tr>\n");
      out.write("							</table>\n");
      out.write("							<br>\n");
      out.write("							<table style=\"width: 500px;\">\n");
      out.write("								<tr>\n");
      out.write("									<td style=\"width: 100px;\">금액</td>\n");
      out.write("									<td><input type=\"text\" class=\"form-control no-line\" name=\"amount\"></td>\n");
      out.write("								</tr>\n");
      out.write("							</table>\n");
      out.write("							<br>\n");
      out.write("							<table style=\"width: 500px;\">\n");
      out.write("								<tr>\n");
      out.write("									<td style=\"width: 100px;\">내용</td>\n");
      out.write("									<td><input type=\"text\" class=\"form-control no-line\" name=\"memo\"></td>\n");
      out.write("								</tr>\n");
      out.write("							</table>\n");
      out.write("							<br> \n");
      out.write("							<div style=\"float: left;\">\n");
      out.write("								<button type=\"reset\" class=\"btn-outline-green\" style=\"width: 150px;\">취소</button>\n");
      out.write("								<button type=\"submit\" class=\"btn-green\" style=\"width: 330px;\">추가</button>\n");
      out.write("							</div>\n");
      out.write("						</form>\n");
      out.write("						<br><br><br>\n");
      out.write("						\n");
      out.write("						<!-- 수입/지출 수정 및 삭제 -->\n");
      out.write("						<div style=\"margin: 30px;\">\n");
      out.write("							<div id=\"d1\">\n");
      out.write("							<h4 style=\"font-weight: bold;\">수입 / 지출 수정</h4>\n");
      out.write("							<form action=\"update_account.multi\">\n");
      out.write("							<table style=\"width: 500px;\">\n");
      out.write("								<tr>\n");
      out.write("									<td colspan=\"2\"><input type=\"hidden\" class=\"form-control no-line\" name=\"id\" id=\"id\"\n");
      out.write("										style=\"height: 50px;\"></td>\n");
      out.write("								</tr>\n");
      out.write("							</table>\n");
      out.write("							<table style=\"width: 500px;\">\n");
      out.write("								<tr>\n");
      out.write("									<td style=\"width: 100px;\">날짜</td>\n");
      out.write("									<td><input type=\"date\" class=\"form-control no-line\" name=\"paydate\" id=\"paydate\"\n");
      out.write("										style=\"height: 50px;\"></td>\n");
      out.write("								</tr>\n");
      out.write("							</table>\n");
      out.write("							<br>\n");
      out.write("							<table style=\"width: 500px;\">\n");
      out.write("								<tr>\n");
      out.write("									<td style=\"width: 100px;\">분류</td>\n");
      out.write("									<td>\n");
      out.write("									<td><label class=\"radio-inline\"\n");
      out.write("										style=\"margin-right: 100px;\"> <input type=\"radio\"\n");
      out.write("											name=\"payselect\" id=\"payselect1\" value=\"수입\" checked> 수입\n");
      out.write("									</label> <label class=\"radio-inline\"> <input type=\"radio\"\n");
      out.write("											name=\"payselect\" id=\"payselect2\" value=\"지출\"> 지출\n");
      out.write("									</label></td>\n");
      out.write("								</tr>\n");
      out.write("							</table>\n");
      out.write("							<br>\n");
      out.write("							<table style=\"width: 500px;\">\n");
      out.write("								<tr>\n");
      out.write("									<td style=\"width: 100px;\">카테고리</td>\n");
      out.write("									<td><select name=\"category\" id=\"category\" class=\"custom-select no-line\">\n");
      out.write("											<option selected></option>\n");
      out.write("											<option value=\"food\">식비</option>\n");
      out.write("											<option value=\"trans\">교통비</option>\n");
      out.write("											<option value=\"medi\">의료비</option>\n");
      out.write("											<option value=\"leis\">여가</option>\n");
      out.write("											<option value=\"etc\">기타</option>\n");
      out.write("									</select></td>\n");
      out.write("								</tr>\n");
      out.write("							</table>\n");
      out.write("							<br>\n");
      out.write("							<table style=\"width: 500px;\">\n");
      out.write("								<tr>\n");
      out.write("									<td style=\"width: 100px;\">금액</td>\n");
      out.write("									<td><input type=\"text\" class=\"form-control no-line\" name=\"amount\" id=\"amount\"></td>\n");
      out.write("								</tr>\n");
      out.write("							</table>\n");
      out.write("							<br>\n");
      out.write("							<table style=\"width: 500px;\">\n");
      out.write("								<tr>\n");
      out.write("									<td style=\"width: 100px;\">내용</td>\n");
      out.write("									<td><input type=\"text\" class=\"form-control no-line\" name=\"memo\" id=\"memo\"></td>\n");
      out.write("								</tr>\n");
      out.write("							</table>\n");
      out.write("							<br> \n");
      out.write("							<div style=\"float: left;\">\n");
      out.write("								<button type=\"submit\" class=\"btn-green\" style=\"width: 240px;\">수정</button>\n");
      out.write("							</div>\n");
      out.write("						</form>\n");
      out.write("						<form action=\"delete_account.multi\">\n");
      out.write("							<input type=\"hidden\" name=\"id\" id=\"idDel\"> <!-- id 값 숨겨서 delet_account.multi로 submit (id 값은 변경하면 안되므로) -->\n");
      out.write("							<button type=\"submit\" class=\"btn-green\" style=\"width: 240px; margin-left: 5px;\">삭제</button>\n");
      out.write("						</form>\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/all.jsp(177,10) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("vo");
      // /WEB-INF/views/all.jsp(177,10) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/all.jsp(177,10) '${list}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${list}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("											<tr>\n");
            out.write("												<!-- id는 행 구분하려고 만들었으므로 안보이게 하기 -->\n");
            out.write("												<td style=\"display: none;\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("												<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.paydate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("												<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.payselect}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("												<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.category}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("												<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.memo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("												<td>");
            if (_jspx_meth_fmt_005fformatNumber_005f1(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("</td> <!-- 숫자 세 자리 단위로 콤마 찍기 -->\n");
            out.write("											</tr>\n");
            out.write("										");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fformatNumber_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatNumber
    org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag _jspx_th_fmt_005fformatNumber_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag) _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag.class);
    boolean _jspx_th_fmt_005fformatNumber_005f1_reused = false;
    try {
      _jspx_th_fmt_005fformatNumber_005f1.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatNumber_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/views/all.jsp(185,16) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatNumber_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.amount}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/views/all.jsp(185,16) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatNumber_005f1.setPattern("#,###");
      int _jspx_eval_fmt_005fformatNumber_005f1 = _jspx_th_fmt_005fformatNumber_005f1.doStartTag();
      if (_jspx_th_fmt_005fformatNumber_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatNumber_005f1);
      _jspx_th_fmt_005fformatNumber_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatNumber_005f1, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatNumber_005f1_reused);
    }
    return false;
  }
}
